on:
  push:
    branches: ['main']
    paths-ignore:
      - 'README.md'
      - LICENSE
      - .vscode/*
  workflow_dispatch: {}

name: CI-CD

jobs:
  CI:
    permissions:
      actions: read
      contents: write
      id-token: write
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezone: 'America/Sao_Paulo'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        id: npm-install
        run: npm ci

      - name: Run tests
        id: npm-test
        run: npm test

      - name: Sonarcloud Scan
        uses: sonarsource/sonarqube-scan-action@v4.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.qualitygate.wait=true
            -Dsonar.projectKey=GoDllkE_github-properties-as-envs
            -Dsonar.projectName=github-properties-as-envs
            -Dsonar.organization=godllke
  CD:
    permissions:
      actions: read
      contents: write
      id-token: write
      security-events: write
    needs: CI
    runs-on: ubuntu-latest
    if: needs.CI.result == 'success'
    steps:
      - name: Configure timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezone: 'America/Sao_Paulo'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Collect project metadata
        id: project-metadata
        run: |
          echo "PACKAGE_NAME=$(jq -r '.name' package.json)" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERISON=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Generating tag release v${{ steps.project-metadata.outputs.RELEASE_TAG }}
        id: tag-release
        run: |
          git tag --force v${{ steps.project-metadata.outputs.RELEASE_TAG }}
          git push --force --tags

      - name: Collecting previous and latest tags metadata
        id: tags-metadata
        run: |
          echo "LATEST_TAG=$(git tag --abbrev=0 --tags)" >> $GITHUB_OUTPUT"
          echo "PREVIOUS_TAG_COMMIT=$(git rev-list --tags --skip=1 --max-count=1)" >> $GITHUB_OUTPUT
          echo "PREVIOUS_TAG=$(git describe --abbrev=0 --always --tags $PREVIOUS_TAG_COMMIT)" >> $GITHUB_OUTPUT
          
      - name: Generating changelog
        id: changelog-generator
        uses: jaywcjlove/changelog-generator@main
        with:
          token: ${{ github.token}}
          filter-author: '(dependabot|github-actions|bot)'
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'
      
      - name: Exporting generated changelog into file
        id: changelog-file-exporter
        run: echo "${{ steps.changelog-generator.outputs.changelog }}" > CHANGELOG.md

      - name: Creating Github Release
        id: github-release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ github.token }}
          name: ${{ steps.project-metadata.outputs.PACKAGE_NAME }} 
          tag: v${{ steps.project-metadata.outputs.PACKAGE_VERISON }}
          body: |
            ### Release Notes
            Change on code can be found [here](${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.tags-metadata.outputs.PREVIOUS_TAG }}...${{ steps.project-metadata.outputs.LATEST_TAG }}).
            
            Release generated through [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

            ### Changelog
            ${{ steps.changelog-file-exporter.outputs.changelog }}
          generateReleaseNotes: true
          SkipIfReleaseExists: true
